name: CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
# 코드를 pull하기 위한 읽기 권한 부여
# JaCoCo로 리포트를 생성하기 위한 쓰기 권한 부여
permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          clean: false

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle wrapper에 대한 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # gradle 빌드관련 캐시와 빌드 결과물을 초기화
      - name: Clean Gradle Cache and Build
        run: |
          ./gradlew --stop
          rm -rf ~/.gradle/caches/
          rm -rf build/

      # docker-compose 실행
      - name: Build and Start MySQL Containers with Docker Compose
        run: |
          docker compose -f ./src/resource/test/ci/docker-compose.yml up -d --build --wait

      - name: Verify MySQL Containers are Running
        run: docker ps -a

      # 7.6.4버전으로 gradle 세팅 (JaCoCo와 호환성이 좋은 버전으로 세팅)
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '7.6.4'

      # 테스트 전 애플리케이션 빌드
      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Check application-test.yml exists
        run: cat src/test/resources/application-test.yml || echo "application-test.yml not found"

      #lower_case_table_names세팅이 잘 되었는지 확인
      - name: Check MySQL lower_case_table_names setting
        run: |
          docker exec $(docker ps -q --filter "name=db_main" --filter "status=running") mysql -u root -prootpassword -e "SHOW VARIABLES LIKE 'lower_case_table_names';"


      # 테스트 진행
      - name: Test with Gradle
        env:
          SPRING_PROFILES_ACTIVE: test
          TEST_DB_MAIN_PORT: 3306
          TEST_DB_META_PORT: 3307
          TEST_DB_USERNAME: root
          TEST_DB_PASSWORD: rootpassword
          KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}
          EMAIL_AES_KEY: ${{ secrets.EMAIL_AES_KEY }}
          PHONE_AES_KEY: ${{ secrets.PHONE_AES_KEY }}
        run: ./gradlew test --info

      # 테스트를 기반으로 JaCoCo 리포트 작성
      - name: Generate JaCoCo Report
        run: ./gradlew jacocoTestReport

      # JaCoCo리포트를 PR댓글로 남기기
      - name: JaCoCo Report to PR
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Code Coverage'
          update-comment: true

      # 모든 스텝 종료 후 컨테이너 로그 출력 (에러 발생 시 유용)
      - name: Print Docker container logs (for debugging)
        if: always()
        run: |
          echo "Listing all Docker containers:"
          time docker ps -a
          echo "--- Attempting to get logs for all 'mysql:8.0' containers ---"
          ALL_MYSQL_CONTAINER_IDS=$(docker ps -a -q -f "ancestor=mysql:8.0")
          if [ -n "$ALL_MYSQL_CONTAINER_IDS" ]; then
            for CONTAINER_ID in $ALL_MYSQL_CONTAINER_IDS; do
              echo "--- Logs for container ID: $CONTAINER_ID ---"
              docker logs --details "$CONTAINER_ID" || true
              echo "--- End of logs for container ID: $CONTAINER_ID ---"
            done
          else
            echo "No 'mysql:8.0' containers found."
          fi
          echo "--- End of Docker container logs ---"