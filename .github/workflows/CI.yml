name: CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
# 코드를 pull하기 위한 읽기 권한 부여
# JaCoCo로 리포트를 생성하기 위한 쓰기 권한 부여
permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql_main_db:
        image: mysql:8.0 # 첫 번째 MySQL 인스턴스
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: test_main_db # 첫 번째 데이터베이스 이름
        ports:
          - 3306:3306 # 호스트 3306 포트와 컨테이너 3306 포트 매핑
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -p rootpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

      mysql_meta_db:
        image: mysql:8.0 # 두 번째 MySQL 인스턴스
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: test_meta_db # 두 번째 데이터베이스 이름
        ports:
          - 3307:3306 # 호스트 3307 포트와 컨테이너 3306 포트 매핑
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -p rootpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Wait for MySQL services to be ready
        run: |
          echo "Waiting for MySQL databases to be ready..."
          while ! mysqladmin ping -h 127.0.0.1 -P 3306 -u root -p rootpassword --silent; do
            sleep 1
          done
          echo "mysql_test_db_1 is ready!"
          while ! mysqladmin ping -h 127.0.0.1 -P 3307 -u root -p rootpassword --silent; do
            sleep 1
          done
          echo "mysql_test_db_2 is ready!"

      - name: Print Network Information (Debugging)
        run: ip a

      - name: Run Flyway Migrations for test_db_1
        run: |
          ./gradlew flywayMigrate -Dflyway.url="jdbc:mysql://127.0.0.1:3306/test_main_db" \
                                 -Dflyway.user="root \
                                 -Dflyway.password=rootpassword
        env:
          TEST_DB_USERNAME: rootpassword
          TEST_DB_PASSWORD: rootpassword

      - name: Run Flyway Migrations for test_db_2
        run: |
          ./gradlew flywayMigrate -Dflyway.url="jdbc:mysql://127.0.0.1:3307/test_meta_db" \
                                 -Dflyway.user=root \
                                 -Dflyway.password=rootpassword
        env:
          TEST_DB_USERNAME: root
          TEST_DB_PASSWORD: rootpassword

      # 테스트 진행
      - name: Test with Gradle
        run: ./gradlew test --info
        env:
          TEST_DB_USERNAME: root
          TEST_DB_PASSWORD: rootpassword

      # 테스트를 기반으로 JaCoCo 리포트 작성
      - name: Generate JaCoCo Report
        run: ./gradlew jacocoTestReport

      # JaCoCo리포트를 PR댓글로 남기기
      - name: JaCoCo Report to PR
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Code Coverage'
          update-comment: true
